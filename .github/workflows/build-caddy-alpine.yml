name: Build and Push Caddy-Alpine Image

on:
  repository_dispatch:
    types: [caddy-release]
  workflow_dispatch: # Allows manual triggering

permissions:
  contents: write
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      #- name: Set up QEMU
      #  uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set version if empty
        id: set_version
        run: |
          if [ -z "${{ github.event.client_payload.latest_version }}" ]; then
            VERSION=$(cat version.json | jq -r '.version')
            echo "VERSION=$VERSION" >> $GITHUB_ENV
          else
            echo "VERSION=${{ github.event.client_payload.latest_version }}" >> $GITHUB_ENV
          fi

      - name: Build and push Caddy image (Alpine)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile-Alpine
          push: true
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-alpine:${{ env.VERSION }}
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-alpine:latest
            ${{ github.repository_owner }}/${{ github.event.repository.name }}-alpine:${{ env.VERSION }}
            ${{ github.repository_owner }}/${{ github.event.repository.name }}-alpine:latest

      #- name: Clean up Docker images
      #  run: |
      #    docker rmi ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ env.VERSION }} || true
      #    docker rmi ${{ github.actor }}/${{ github.event.repository.name }}:${{ env.VERSION }} || true
      #    docker builder prune --force
